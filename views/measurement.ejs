<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>Medición de Temperatura: Termocupla y PT100</title>
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/css/estilos.css"> <!-- Archivo CSS -->
    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/modules/exporting.js"></script>
    <script src="https://code.highcharts.com/modules/export-data.js"></script>
    <script src="https://code.highcharts.com/modules/accessibility.js"></script>
</head>
<body>
    <header>
        <h1>Monitor de Temperaturas: Termocupla y PT100</h1>
        <div class="user-controls">
            <button id="theme-toggle" aria-label="Cambiar tema"><i class="fas fa-moon"></i></button>
            <button class="btn btn-user" id="userBtn"><i class="fas fa-user"></i> <%= usuario.nombre %></button>
            <button class="btn btn-logout" id="logoutBtn"><i class="fas fa-sign-out-alt"></i> Cerrar Sesión</button>
        </div>
    </header>

    <section>
        <h2>Gráfica Combinada: Termocupla vs PT100</h2>
        <figure class="highcharts-figure">
            <div id="combinedChart"></div>
        </figure>
    </section>

    <section>
        <h2>Gráfica Separada: Termocupla</h2>
        <figure class="highcharts-figure">
            <div id="termocuplaChart"></div>
        </figure>
    </section>

    <section>
        <h2>Gráfica Separada: PT100</h2>
        <figure class="highcharts-figure">
            <div id="pt100Chart"></div>
        </figure>
    </section>

    <script type="text/javascript">
        const apiUrl = '/api/temperaturas'; // Ruta de tu API para obtener los datos

        // Función para crear gráficas
        function createChart(container, title, seriesData) {
            Highcharts.chart(container, {
                chart: {
                    type: 'line'
                },
                title: {
                    text: title,
                    style: {
                        fontFamily: 'Playfair Display, sans-serif',
                        fontSize: '18px',
                        color: '#1f618d'
                    }
                },
                xAxis: {
                    type: 'datetime',
                    title: {
                        text: 'Tiempo'
                    },
                    labels: {
                        format: '{value:%Y-%m-%d %H:%M:%S}'
                    },
                    tickInterval: 1000 * 60 * 60, 
                },
                yAxis: {
                    title: {
                        text: 'Temperatura (°C)'
                    },
                    labels: {
                        formatter: function() {
                            return this.value + '°C';
                        }
                    }
                },
                series: seriesData,
                tooltip: {
                    formatter: function () {
                        var date = new Date(this.x);
                        return `<b>${this.series.name}</b><br/>${date.toLocaleDateString()} ${date.toLocaleTimeString()}<br/>${this.y}°C`;
                    }
                }
            });
        }

        // Función para actualizar datos
        function updateCharts() {
            fetch(apiUrl)
                .then(response => response.json())
                .then(data => {
                    const combinedDataTermocupla = data.map(item => [Date.parse(item.Fecha), parseFloat(item.Termocupla)]);
                    const combinedDataPT100 = data.map(item => [Date.parse(item.Fecha), parseFloat(item.PT100)]);

                    const termocuplaData = data.map(item => [Date.parse(item.Fecha), parseFloat(item.Termocupla)]);
                    const pt100Data = data.map(item => [Date.parse(item.Fecha), parseFloat(item.PT100)]);

                    Highcharts.charts[0].series[0].setData(combinedDataTermocupla);
                    Highcharts.charts[0].series[1].setData(combinedDataPT100);

                    Highcharts.charts[1].series[0].setData(termocuplaData);
                    Highcharts.charts[2].series[0].setData(pt100Data);
                })
                .catch(error => console.error('Error fetching data:', error));
        }

        // Crear las gráficas al cargar la página
        createChart('combinedChart', 'Termocupla vs PT100', [
            { name: 'Termocupla', data: [] },
            { name: 'PT100', data: [] }
        ]);

        createChart('termocuplaChart', 'Termocupla', [
            { name: 'Termocupla', data: [] }
        ]);

        createChart('pt100Chart', 'PT100', [
            { name: 'PT100', data: [] }
        ]);

        // Actualizar las gráficas cada 5 segundos
        setInterval(updateCharts, 5000);
        updateCharts();
    </script>
</body>
</html>
