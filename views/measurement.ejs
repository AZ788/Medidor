<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Monitor de Temperaturas - Termocupla & PT100</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;600;700&display=swap" rel="stylesheet">
  <link href="/estilos.css" rel="stylesheet">
  <script src="https://code.highcharts.com/highcharts.js"></script>
  <script src="https://code.highcharts.com/modules/exporting.js"></script>
  <script src="https://code.highcharts.com/modules/export-data.js"></script>
  <script src="https://code.highcharts.com/modules/accessibility.js"></script>
  <style>
    body {
      font-family: 'Open Sans', sans-serif;
      background-color: #f4f6f9;
      color: #333;
      margin: 0;
      padding: 0;
    }

    header {
      background-color: #003366;
      padding: 20px;
      text-align: center;
      color: white;
      position: sticky;
      top: 0;
      z-index: 1000;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    header h1 {
      font-size: 2.5rem;
      font-weight: 700;
      margin: 0;
    }

    header .cerrar-sesion {
      position: absolute;
      right: 20px;
      top: 20px;
      padding: 10px 15px;
      background-color: #ff4444;
      color: white;
      border-radius: 5px;
      text-decoration: none;
      font-weight: bold;
      display: flex;
      align-items: center;
      transition: background-color 0.3s ease;
    }

    header .cerrar-sesion i {
      margin-right: 5px;
    }

    header .cerrar-sesion:hover {
      background-color: #ff2222;
    }

    .contenedor {
      max-width: 1200px;
      margin: 40px auto;
      padding: 20px;
      background-color: white;
      border-radius: 10px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .resumen {
      display: flex;
      justify-content: space-around;
      margin-bottom: 30px;
    }

    .resumen .cuadro {
      background-color: #eef1f5;
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);
      text-align: center;
      flex: 1;
      margin: 0 10px;
    }

    .resumen .titulo {
      font-size: 1.2rem;
      font-weight: 600;
      margin-bottom: 10px;
    }

    .resumen .valor {
      font-size: 2.5rem;
      font-weight: bold;
      color: #0066cc;
      animation: fadeIn 0.5s ease-in-out;
    }

    .graficas {
      display: flex;
      justify-content: space-between;
      flex-wrap: wrap;
    }

    .grafica {
      flex: 1;
      min-width: 300px;
      height: 400px;
      margin: 20px;
      background-color: #f9f9f9;
      border-radius: 10px;
      padding: 20px;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    .grafica.completa {
      flex-basis: 100%;
      margin: 20px 0;
    }

    footer {
      background-color: #003366;
      color: white;
      padding: 20px;
      text-align: center;
      position: fixed;
      bottom: 0;
      width: 100%;
      box-shadow: 0 -4px 6px rgba(0, 0, 0, 0.1);
    }

    footer p {
      margin: 0;
      font-size: 0.9rem;
    }

    footer a {
      color: #ff4444;
      text-decoration: none;
      font-weight: bold;
    }

    footer a:hover {
      text-decoration: underline;
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
      }
      to {
        opacity: 1;
      }
    }
  </style>
</head>
<body>

  <header>
    <h1>Monitor de Temperaturas</h1>
    <a href="/logout" class="cerrar-sesion">
      <i class="fas fa-sign-out-alt"></i> Cerrar sesión
    </a>
  </header>

  <div class="contenedor">
    <div class="resumen">
      <div class="cuadro">
        <div class="titulo">Temperatura Termocupla</div>
        <div class="valor" id="valor-serie">0°C</div>
      </div>
      <div class="cuadro">
        <div class="titulo">Temperatura PT100</div>
        <div class="valor" id="valor-temperatura">0°C</div>
      </div>
    </div>

    <div class="graficas">
      <div class="grafica" id="termocupla-grafica"></div>
      <div class="grafica" id="pt100-grafica"></div>
    </div>
    <div class="grafica completa" id="combinada-grafica"></div>
  </div>

  <script>
    // Highcharts options globales
    Highcharts.setOptions({
      lang: {
        months: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
        shortMonths: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'],
        weekdays: ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'],
        loading: 'Cargando...',
        noData: 'No hay datos para mostrar'
      }
    });

    // Función para actualizar las gráficas y los valores actuales
    function actualizarDatos() {
      fetch('/data')
        .then(response => response.json())
        .then(data => {
          const termocuplaChart = Highcharts.charts[0];
          const pt100Chart = Highcharts.charts[1];
          const combinadaChart = Highcharts.charts[2];

          const termocuplaData = data.map(item => [Date.parse(item.Fecha), parseFloat(item.Serie)]);
          const pt100Data = data.map(item => [Date.parse(item.Fecha), parseFloat(item.Temperatura)]);

          termocuplaChart.series[0].setData(termocuplaData);
          pt100Chart.series[0].setData(pt100Data);

          combinadaChart.series[0].setData(termocuplaData);
          combinadaChart.series[1].setData(pt100Data);

          // Actualizar valores de resumen
          document.getElementById('valor-serie').textContent = termocuplaData[termocuplaData.length - 1][1].toFixed(2) + '°C';
          document.getElementById('valor-temperatura').textContent = pt100Data[pt100Data.length - 1][1].toFixed(2) + '°C';
        })
        .catch(error => console.error('Error al obtener datos:', error));
    }

    // Gráfico para la termocupla
    Highcharts.chart('termocupla-grafica', {
      chart: {
        type: 'spline',
        backgroundColor: '#fff'
      },
      title: {
        text: 'Temperatura - Termocupla',
        style: {
          fontSize: '1.5rem',
          fontWeight: '600'
        }
      },
      xAxis: {
        type: 'datetime',
        labels: {
          format: '{value:%H:%M:%S}'
        }
      },
      yAxis: {
        title: {
          text: 'Temperatura (°C)'
        },
        max: 250
      },
      series: [{
        name: 'Termocupla',
        data: []
      }]
    });

    // Gráfico para PT100
    Highcharts.chart('pt100-grafica', {
      chart: {
        type: 'spline',
        backgroundColor: '#fff'
      },
      title: {
        text: 'Temperatura - PT100',
        style: {
          fontSize: '1.5rem',
          fontWeight: '600'
        }
      },
      xAxis: {
        type: 'datetime',
        labels: {
          format: '{value:%H:%M:%S}'
        }
      },
      yAxis: {
        title: {
          text: 'Temperatura (°C)'
        },
        max: 250
      },
      series: [{
        name: 'PT100',
        data: []
      }]
    });

    // Gráfico combinado
    Highcharts.chart('combinada-grafica', {
      chart: {
        type: 'spline',
        backgroundColor: '#fff'
      },
      title: {
        text: 'Temperaturas Combinadas',
        style: {
          fontSize: '1.5rem',
          fontWeight: '600'
        }
      },
      xAxis: {
        type: 'datetime',
        labels: {
          format: '{value:%H:%M:%S}'
        }
      },
      yAxis: {
        title: {
          text: 'Temperatura (°C)'
        },
        max: 250
      },
      series: [
        {
          name: 'Termocupla',
          data: []
        },
        {
          name: 'PT100',
          data: []
        }
      ]
    });

    // Actualización periódica de datos cada 500 ms
    setInterval(actualizarDatos, 500);
  </script>

  <footer>
    <p>Desarrollado por <a href="#">CTLBI</a> - © 2024</p>
  </footer>

</body>
</html>
